
                                                            ______________________________________________________________________________________
                                                                  __                         __                  ______     __     _____      __  
                                                                /    )   /     ,           /    )   ,              /      /    )   /    )   /    )
                                                            ----\-------/__----------__----\-----------_--_-------/------/----/---/----/---/----/-
                                                                 \     /   ) /     /   )    \     /   / /  )     /      /    /   /    /   /    /  
                                                            _(____/___/___/_/_____/___/_(____/___/___/_/__/_____/______(____/___/____/___(____/___
                                                                                 /                                                                
                                                                                /                                                                 


- Ship navigation
    - Maybe turn towards a point, that is shifted by the boat when new directions are required.
- Ship instruments
    - Boats should be able to turn towards a specified compass angle. I.e navigate from compass. 
        - Maybe add 'NavigateBy' with enums ByCompass, BySight, etc.
        - Navigation: Maybe turn towards a nearby point on the map, that is set from compass.
            - Test that compass 359 > target > 180 turns the boat to port
                - It should not turn all the way around, just to turn a little to the left
            - Test that compass   0 < target < 180 turns the boat to starboard
            - Compass.forward, Compass.Backward, Compass.Degrees(121)
    - Ship Detection sphere / What it can see:
        - Add list of detected entities. (Maybe inherit or make interface to make detectable.)
            - Mostly thinking of ships, but could be extended to bouyes and other landmarks.
        - Test if two ships can see each other
        - Ships should have a second collider, that other ships can trigger a collision on.
            - Ships have trigger colliders, but other ships must have a solid non-trigger collider, that represents how 'big' the boat is.
            - Ships should have a Size property
  	

- Refactoring
    - Make use of scriptable objects for animation curves and/or data
    - Use properties instead of getter methods
    - Make class for conversions
    - Animation curves instead of ICurve. It can be used to deduce the maximum speed (by taking the x value of the last key in Acceleration curve)
        - Use scriptable objects
    - Rename to clarify ms vs knots (i.e GetSpeedInKnots() / GetSpeedInMS())
        - Now uses Speed and Acceleration instead of SpeedInMs or AppliedSpeed
    - Rename getters to get for clarification (I.e GetSomething() instead of Something())
    - Make update in Boat.cs calculate speed change as a delta, and then update in a single statement instead of multiples.
    - Move some of the functions from Boat.cs to IBoat.cs, since the implemenentation wouldn't differ
        - ReadCompass()
        - GetDetectedEntities()

World generation
 - ???









